<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Git]]></title>
    <url>%2F2018%2F05%2F18%2FGit%2F</url>
    <content type="text"><![CDATA[学习资料 集中式与分布式 Git 的中心服务器 Git 工作流 分支实现 冲突 Fast forward 分支管理策略 储藏（Stashing） SSH 传输设置 .gitignore 文件 Git 命令一览 学习资料 Git - 简明指南 图解 Git 廖雪峰 : Git 教程 Learn Git Branching 集中式与分布式Git 属于分布式版本控制系统，而 SVN 属于集中式。 集中式版本控制只有中心服务器拥有一份代码，而分布式版本控制每个人的电脑上就有一份完整的代码。 集中式版本控制有安全性问题，当中心服务器挂了所有人都没办法工作了。 集中式版本控制需要连网才能工作，如果网速过慢，那么提交一个文件的会慢的无法让人忍受。而分布式版本控制不需要连网就能工作。 分布式版本控制新建分支、合并分支操作速度非常快，而集中式版本控制新建一个分支相当于复制一份完整代码。 Git 的中心服务器Git 的中心服务器用来交换每个用户的修改。没有中心服务器也能工作，但是中心服务器能够 24 小时保持开机状态，这样就能更方便的交换修改。Github 就是一种 Git 中心服务器。 Git 工作流 新建一个仓库之后，当前目录就成为了工作区，工作区下有一个隐藏目录 .git，它属于 Git 的版本库。 Git 版本库有一个称为 stage 的暂存区，还有自动创建的 master 分支以及指向分支的 HEAD 指针。 git add files 把文件的修改添加到暂存区 git commit 把暂存区的修改提交到当前分支，提交之后暂存区就被清空了 git reset – files 使用当前分支上的修改覆盖暂缓区，用来撤销最后一次 git add files git checkout – files 使用暂存区的修改覆盖工作目录，用来撤销本地修改 可以跳过暂存区域直接从分支中取出修改或者直接提交修改到分支中 git commit -a 直接把所有文件的修改添加到暂缓区然后执行提交 git checkout HEAD – files 取出最后一次修改，可以用来进行回滚操作 分支实现Git 把每次提交都连成一条时间线。分支使用指针来实现，例如 master 分支指针指向时间线的最后一个节点，也就是最后一次提交。HEAD 指针指向的是当前分支。 新建分支是新建一个指针指向时间线的最后一个节点，并让 HEAD 指针指向新分支表示新分支成为当前分支。 每次提交只会让当前分支向前移动，而其它分支不会移动。 合并分支也只需要改变指针即可。 冲突当两个分支都对同一个文件的同一行进行了修改，在分支合并时就会产生冲突。 Git 会使用 &lt;&lt;&lt;&lt;&lt;&lt;&lt; ，======= ，&gt;&gt;&gt;&gt;&gt;&gt;&gt; 标记出不同分支的内容，只需要把不同分支中冲突部分修改成一样就能解决冲突。 12345&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADCreating a new branch is quick &amp; simple.=======Creating a new branch is quick AND simple.&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1 Fast forward“快进式合并”（fast-farward merge），会直接将 master 分支指向合并的分支，这种模式下进行分支合并会丢失分支信息，也就不能在分支历史上看出分支信息。 可以在合并时加上 –no-ff 参数来禁用 Fast forward 模式，并且加上 -m 参数让合并时产生一个新的 commit。 1$ git merge --no-ff -m &quot;merge with no-ff&quot; dev 分支管理策略master 分支应该是非常稳定的，只用来发布新版本； 日常开发在开发分支 dev 上进行。 储藏（Stashing）在一个分支上操作之后，如果还没有将修改提交到分支上，此时进行切换分支，那么另一个分支上也能看到新的修改。这是因为所有分支都共用一个工作区的缘故。 可以使用 git stash 将当前分支的修改储藏起来，此时当前工作区的所有修改都会被存到栈上，也就是说当前工作区是干净的，没有任何未提交的修改。此时就可以安全的切换到其它分支上了。 123$ git stashSaved working directory and index state \ &quot;WIP on master: 049d078 added the index file&quot;HEAD is now at 049d078 added the index file (To restore them type &quot;git stash apply&quot;) 该功能可以用于 bug 分支的实现。如果当前正在 dev 分支上进行开发，但是此时 master 上有个 bug 需要修复，但是 dev 分支上的开发还未完成，不想立即提交。在新建 bug 分支并切换到 bug 分支之前就需要使用 git stash 将 dev 分支的未提交修改储藏起来。 SSH 传输设置Git 仓库和 Github 中心仓库之间是通过 SSH 加密。 如果工作区下没有 .ssh 目录，或者该目录下没有 id_rsa 和 id_rsa.pub 这两个文件，可以通过以下命令来创建 SSH Key： 1$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 然后把公钥 id_rsa.pub 的内容复制到 Github “Account settings” 的 SSH Keys 中。 .gitignore 文件忽略以下文件： 操作系统自动生成的文件，比如缩略图； 编译生成的中间文件，比如 Java 编译产生的 .class 文件； 自己的敏感信息，比如存放口令的配置文件。 不需要全部自己编写，可以到 https://github.com/github/gitignore 中进行查询。 Git 命令一览 比较详细的地址：http://www.cheat-sheets.org/saved-copy/git-cheat-sheet.pdf]]></content>
      <categories>
        <category>java面试</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初二上]]></title>
    <url>%2F2018%2F05%2F17%2F%E5%88%9D%E4%BA%8C%E4%B8%8A%2F</url>
    <content type="text"><![CDATA[大家好，经过前两天的复习，我们对初一的知识有个全面的了解。它主要是 世界地理。那么下面我 们来学习中国地理，走进我们祖国的怀抱。 分析首先，从世界的角度来看中国，疆域，人口，民族。接着要了解我们生存的自然环境。地形和地势， 气候，河流，自然灾害。那么中国的自然资源又有哪些？首先自然资源的基本特征，然后土地资源， 水资 源。最后，就是我们的经济发展。交通运输，农业，工业。 目录从世界看中国 疆域 人口 民族 中国的自然环境 地形和地势 气候 河流 自然灾害 中国的自然资源 自然资源的基本特征 土地资源 水资源 中国的经济发展 交通运输 农业 工业]]></content>
      <categories>
        <category>教师资格</category>
      </categories>
      <tags>
        <tag>初二上</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初一下]]></title>
    <url>%2F2018%2F05%2F17%2F%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95-%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[分析：大家好，今天来盘点初一下册的地理脉络。首先通过上本书的学习，使我们对我们生活的地球有了宏观的把握，分别从地球和地图，大洲和大洋，天气和气候，聚落和民族。下面，让我们更深一步的了解我们生活的地区。 首先我们开始讲解我们生活的大洲-亚洲，分别从位置和范围，自然环境来分析。好接下来是同为东半球的其他地区和国家，日本，东南亚，印度 ，俄罗斯，了解完这些邻居之后，我们再向外看，中东，欧洲西部，撒哈拉以南非洲，澳大利亚。最后，再来看下西半球的国家，美国，巴西，当然，还有不毛之地-极地。 目录 初一下我们生活的大洲-亚洲 位置和范围 自然环境我们邻近的地区和国家 日本 东南亚 印度 俄罗斯东半球其他的地区和国家 中东 欧洲西部 撒哈拉以南非洲 澳大利亚西半球的地区和国家 美国 巴西极地地区]]></content>
      <categories>
        <category>教师资格</category>
      </categories>
      <tags>
        <tag>初一下</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[教师资格证面试心经]]></title>
    <url>%2F2018%2F05%2F16%2F%E6%95%99%E5%B8%88%E8%B5%84%E6%A0%BC%E8%AF%81%E9%9D%A2%E8%AF%95%E5%BF%83%E7%BB%8F%2F</url>
    <content type="text"><![CDATA[总结：今天是5,16号距离面试还有3天，经过前短时间的复习，和练习，我对知识的掌握程度大概在70%左右。初中地理，一共有四本书，七年级的内容是世界地理，八年级的地理是中国地理。 初一上1.地球和地图 地球和地球仪 地球的运动 地图的判读 地形图的判读2.陆地和海洋 大洲和大洋 海陆的变迁3.天气和气候 多变的天气 气温的变化与分布 降水的变化与分布 世界的气候 4.居民和聚落 人口和人种 世界的语言和宗教 人类的聚居地 分析首先我们呢来学习地球，那么地球的形状和大小，为了更好地认识地球，我们制作了地球仪。除了地球仪，还有地图也是为了我们可以更好的学习地理事物，但是立体的事物，我们又该如何认识？地形图应运而生了。准备好了工具。我们先认识陆地和大洋，以及他们的变迁。接着天气和气候又来了。这是我们生活中真真切切感受到的。天气就像小女孩的脸一样，变得比书都快。温度和降水是气候的两大因素。随后，世界的气候，你们准备好了吗？最后一章，讲的是人。人口和人的肤色。交流沟通的语言。最后 ，人类的聚居地。]]></content>
      <categories>
        <category>教师资格</category>
      </categories>
      <tags>
        <tag>初一上</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[教师资格面试--教案]]></title>
    <url>%2F2018%2F05%2F11%2F%E6%95%99%E5%B8%88%E8%B5%84%E6%A0%BC%E9%9D%A2%E8%AF%95-%E6%95%99%E6%A1%88%2F</url>
    <content type="text"><![CDATA[1.教案应该怎么写？要在备课纸上写简案，但在备考期间要练习写详案，详案设计了讲课的全过程，简案要包括： 课题 教学目标 a. 知识与技能 b. 过程和方法 c. 情感，态度和价值观 教学重点难点 a. 教学重点 b. 教学难度 教学过程 a. 导入新课 b. 新课教学 c. 巩固提高 d. 小结作业 板书设计 教学反思]]></content>
      <categories>
        <category>教师资格</category>
      </categories>
      <tags>
        <tag>教师资格面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo入门]]></title>
    <url>%2F2018%2F05%2F10%2Fthat-s-me%2F</url>
    <content type="text"><![CDATA[hello,welcome to this.I love music and like study.下面这个文章是修改博客界面sfhigh一下简书-high博客1博客2图标大全 参考文档2优秀博主1优秀博主2github集中区]]></content>
      <categories>
        <category>收藏夹</category>
      </categories>
      <tags>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
